package Admin;



import DataBase.DataBase;
import FrontLine.Officer_login;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author JOH
 */
public class Admin_login extends javax.swing.JFrame {

    Connection con = null;
    PreparedStatement ps = null;
    ResultSet rs = null;
    
    DataBase dbs = new DataBase();
    String DBuser = dbs.UserDB.getText();
    String DBpass = dbs.PassDB.getText();
    String DBName = dbs.nameDB.getText();
    
    String str;
    int x,y;
    
    public Admin_login() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        adminjpannel = new javax.swing.JPanel();
        admininput = new javax.swing.JTextField();
        adminpassinput = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        combox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("ADMIN LOGIN");
        setUndecorated(true);
        setResizable(false);

        adminjpannel.setBackground(new java.awt.Color(255, 255, 255));
        adminjpannel.setLayout(null);

        admininput.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        admininput.setBorder(null);
        admininput.setOpaque(false);
        admininput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                admininputKeyPressed(evt);
            }
        });
        adminjpannel.add(admininput);
        admininput.setBounds(230, 190, 330, 35);

        adminpassinput.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        adminpassinput.setBorder(null);
        adminpassinput.setOpaque(false);
        adminpassinput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                adminpassinputKeyPressed(evt);
            }
        });
        adminjpannel.add(adminpassinput);
        adminpassinput.setBounds(230, 290, 330, 35);

        jLabel2.setBackground(new java.awt.Color(153, 0, 0));
        jLabel2.setFont(new java.awt.Font("Sitka Heading", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("User Name");
        adminjpannel.add(jLabel2);
        jLabel2.setBounds(230, 160, 330, 40);

        jLabel3.setBackground(new java.awt.Color(153, 0, 0));
        jLabel3.setFont(new java.awt.Font("Sitka Heading", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Password");
        adminjpannel.add(jLabel3);
        jLabel3.setBounds(230, 260, 330, 40);

        jLabel4.setBackground(new java.awt.Color(153, 0, 0));
        jLabel4.setFont(new java.awt.Font("Sitka Heading", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("SELECT YOUR TYPE");
        adminjpannel.add(jLabel4);
        jLabel4.setBounds(270, 70, 510, 30);

        combox.setBackground(new java.awt.Color(51, 255, 51));
        combox.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        combox.setForeground(new java.awt.Color(255, 102, 102));
        combox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Frontline", "Offline", "Main Investigator", "Commander", "Admin" }));
        adminjpannel.add(combox);
        combox.setBounds(560, 70, 220, 28);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Admin/login.png"))); // NOI18N
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        adminjpannel.add(jLabel6);
        jLabel6.setBounds(310, 340, 180, 70);

        jLabel8.setBackground(new java.awt.Color(255, 51, 204));
        jLabel8.setOpaque(true);
        adminjpannel.add(jLabel8);
        jLabel8.setBounds(230, 220, 330, 10);

        jLabel9.setBackground(new java.awt.Color(255, 51, 204));
        jLabel9.setOpaque(true);
        adminjpannel.add(jLabel9);
        jLabel9.setBounds(230, 320, 330, 10);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PbofTs.jpg"))); // NOI18N
        adminjpannel.add(jLabel7);
        jLabel7.setBounds(0, -10, 780, 450);

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setOpaque(true);
        jLabel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel1MouseDragged(evt);
            }
        });
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel1MousePressed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cancel_48px.png"))); // NOI18N
        jLabel5.setOpaque(true);
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(adminjpannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 726, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(adminjpannel, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void admininputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_admininputKeyPressed
       if(admininput.equals("") || adminpassinput.equals(""))
{
     JOptionPane.showMessageDialog(null, "Empty user name or password");
     admininput.setText("");
     adminpassinput.setText("");
}
else
{
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
       {
           try {
            //connection
            con = DriverManager.getConnection(DBName, DBuser,DBpass);

            String s1 = admininput.getText();
            String s2 = adminpassinput.getText();

            str = "SELECT username,password,Type FROM employee WHERE username=? AND password=? AND Type=?";
            ps = con.prepareStatement(str);
            ps.setString(1, admininput.getText());
            ps.setString(2, adminpassinput.getText());
            ps.setString(3, combox.getSelectedItem().toString());
            rs = ps.executeQuery();

           if(rs.next() && rs.getString("username").equals(admininput.getText()) && rs.getString("password").equals(adminpassinput.getText()) && rs.getString("Type").equals(combox.getSelectedItem().toString()))
            {
                JOptionPane.showMessageDialog(null, "Successfuly Logedin");
                AdminPage ap = new AdminPage();
                ap.setVisible(true);
                this.setVisible(false);
                //                String str2 = "INSERT INTO log(userlog) VALUES(?)";
                //                ps = con.prepareStatement(str2);
                //                ps.setString(1, userinput.getText());
                //                ps.executeUpdate();
                ap.APname.setText(admininput.getText());

                //selection of image
                //                while(rs.next())
                //                {
                    //                    rs.close();
                    //                String str17 = "SELECT * FROM patientinfo WHERE username=? AND password=?";
                    //                 ps = con.prepareStatement(str17);
                    //                ps.setString(1, userinput.getText());
                    //                ps.setString(2, passinput.getText());
                    //                rs = ps.executeQuery();
                    //                pp.pimage.setText(rs.getString("image"));
                    //                }

                // Profile image loader

                try {
                    byte[] imgbyt;
                    Image img;
                    con = DriverManager.getConnection(DBName,DBuser,DBpass);
                    String str = "SELECT image FROM employee WHERE username=?";
                    ps=con.prepareStatement(str);
                    ps.setString(1, admininput.getText());
                    rs=ps.executeQuery();
                    while(rs.next())
                    {
                        imgbyt = rs.getBytes(1);
                        img = getToolkit().createImage(imgbyt);
                        Image im = img.getScaledInstance(ap.apimage.getWidth(), ap.apimage.getHeight(), Image.SCALE_SMOOTH);
                        ImageIcon icon = new ImageIcon(im);
                        ap.apimage.setIcon(icon);

                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Admin_login.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Incorrect username or password");
                admininput.setText("");
                adminpassinput.setText("");
                //                String str2 = "DELETE FROM userlog(log)";
                //                ps = con.prepareStatement(str2);
                //                ps.executeUpdate();
            }

        } catch (SQLException ex) {
            Logger.getLogger(Officer_login.class.getName()).log(Level.SEVERE, null, ex);
        }
       }
}
    }//GEN-LAST:event_admininputKeyPressed

    private void adminpassinputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_adminpassinputKeyPressed
      if(admininput.equals("") || adminpassinput.equals(""))
{
     JOptionPane.showMessageDialog(null, "Empty user name or password");
     admininput.setText("");
     adminpassinput.setText("");
}
else
{
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
       {
           try {
            //connection
            con = DriverManager.getConnection(DBName, DBuser,DBpass);

            String s1 = admininput.getText();
            String s2 = adminpassinput.getText();

            str = "SELECT username,password,Type FROM employee WHERE username=? AND password=? AND Type=?";
            ps = con.prepareStatement(str);
            ps.setString(1, admininput.getText());
            ps.setString(2, adminpassinput.getText());
            ps.setString(3, combox.getSelectedItem().toString());
            rs = ps.executeQuery();

            if(rs.next() && rs.getString("username").equals(admininput.getText()) && rs.getString("password").equals(adminpassinput.getText()) && rs.getString("Type").equals(combox.getSelectedItem().toString()))
            {
                JOptionPane.showMessageDialog(null, "Successfuly Logedin");
                AdminPage ap = new AdminPage();
                ap.setVisible(true);
                this.setVisible(false);
                //                String str2 = "INSERT INTO log(userlog) VALUES(?)";
                //                ps = con.prepareStatement(str2);
                //                ps.setString(1, userinput.getText());
                //                ps.executeUpdate();
                ap.APname.setText(admininput.getText());

                //selection of image
                //                while(rs.next())
                //                {
                    //                    rs.close();
                    //                String str17 = "SELECT * FROM patientinfo WHERE username=? AND password=?";
                    //                 ps = con.prepareStatement(str17);
                    //                ps.setString(1, userinput.getText());
                    //                ps.setString(2, passinput.getText());
                    //                rs = ps.executeQuery();
                    //                pp.pimage.setText(rs.getString("image"));
                    //                }

                // Profile image loader

                try {
                    byte[] imgbyt;
                    Image img;
                    con = DriverManager.getConnection(DBName,DBuser,DBpass);
                    String str = "SELECT image FROM employee WHERE username=?";
                    ps=con.prepareStatement(str);
                    ps.setString(1, admininput.getText());
                    rs=ps.executeQuery();
                    while(rs.next())
                    {
                        imgbyt = rs.getBytes(1);
                        img = getToolkit().createImage(imgbyt);
                        Image im = img.getScaledInstance(ap.apimage.getWidth(), ap.apimage.getHeight(), Image.SCALE_SMOOTH);
                        ImageIcon icon = new ImageIcon(im);
                        ap.apimage.setIcon(icon);

                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Admin_login.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Incorrect username or password");
                admininput.setText("");
                adminpassinput.setText("");
                //                String str2 = "DELETE FROM userlog(log)";
                //                ps = con.prepareStatement(str2);
                //                ps.executeUpdate();
            }

        } catch (SQLException ex) {
            Logger.getLogger(Officer_login.class.getName()).log(Level.SEVERE, null, ex);
        }
       }
}
    }//GEN-LAST:event_adminpassinputKeyPressed

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        String[] strarray = new String[] {"*","/","+","-","\"",".","!","@","#","$","%","^","&",")","(","_","="};
        String stcon = Arrays.toString(strarray);
       
        if(admininput.getText().equals(stcon.getBytes())) 
       {
           JOptionPane.showMessageDialog(null, "Invalid Character");
           admininput.setText("");
           adminpassinput.setText("");
       }
       else
       {
        if(admininput.getText().equals("") || adminpassinput.getText().equals(""))
{
     JOptionPane.showMessageDialog(null, "Empty user name or password");
     admininput.setText("");
     adminpassinput.setText("");
}
else
{
        try {
           
            //connection
            con = DriverManager.getConnection(DBName, DBuser,DBpass);

            String s1 = admininput.getText();
            String s2 = adminpassinput.getText();

            str = "SELECT username,password,Type FROM employee WHERE username=? AND password=? AND Type=?";
            ps = con.prepareStatement(str);
            ps.setString(1, admininput.getText());
            ps.setString(2, adminpassinput.getText());
            ps.setString(3, combox.getSelectedItem().toString());
            rs = ps.executeQuery();

            if(rs.next() && rs.getString("username").equals(admininput.getText()) && rs.getString("password").equals(adminpassinput.getText()) && rs.getString("Type").equals(combox.getSelectedItem().toString()))
            {
                 //logs
            Date d = new Date();
            String DataofR = d.toString();
            DateFormat t = new SimpleDateFormat("HH:mm:ss");
            Calendar cld = Calendar.getInstance();
            
            con = DriverManager.getConnection(DBName, DBuser,DBpass);
            str = "INSERT INTO log(EMPLOYEE_NAME,TYPE,DATE,TIME) VALUES(?, ?, ?, ?)";
            ps = con.prepareStatement(str);
            ps.setString(1, admininput.getText());
            ps.setString(2, combox.getSelectedItem().toString());
            ps.setString(3, DataofR);
            ps.setString(4, t.format(cld.getTime()));
            ps.executeUpdate();
                
                JOptionPane.showMessageDialog(null, "Successfuly Logedin");
                AdminPage ap = new AdminPage();
                ap.setVisible(true);
                this.setVisible(false);
                //                String str2 = "INSERT INTO log(userlog) VALUES(?)";
                //                ps = con.prepareStatement(str2);
                //                ps.setString(1, userinput.getText());
                //                ps.executeUpdate();
                ap.APname.setText(admininput.getText());

                //selection of image
                //                while(rs.next())
                //                {
                    //                    rs.close();
                    //                String str17 = "SELECT * FROM patientinfo WHERE username=? AND password=?";
                    //                 ps = con.prepareStatement(str17);
                    //                ps.setString(1, userinput.getText());
                    //                ps.setString(2, passinput.getText());
                    //                rs = ps.executeQuery();
                    //                pp.pimage.setText(rs.getString("image"));
                    //                }

                // Profile image loader

                try {
                    byte[] imgbyt;
                    Image img;
                    con = DriverManager.getConnection(DBName,DBuser,DBpass);
                    String str = "SELECT image FROM employee WHERE username=?";
                    ps=con.prepareStatement(str);
                    ps.setString(1, admininput.getText());
                    rs=ps.executeQuery();
                    while(rs.next())
                    {
                        imgbyt = rs.getBytes(1);
                        img = getToolkit().createImage(imgbyt);
                        Image im = img.getScaledInstance(ap.apimage.getWidth(), ap.apimage.getHeight(), Image.SCALE_SMOOTH);
                        ImageIcon icon = new ImageIcon(im);
                        ap.apimage.setIcon(icon);

                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Admin_login.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Incorrect username or password");
                admininput.setText("");
                adminpassinput.setText("");
                //                String str2 = "DELETE FROM userlog(log)";
                //                ps = con.prepareStatement(str2);
                //                ps.executeUpdate();
            }

        } catch (SQLException ex) {
            Logger.getLogger(Officer_login.class.getName()).log(Level.SEVERE, null, ex);
        }
}
       }
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MousePressed

        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_jLabel1MousePressed

    private void jLabel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseDragged
       
        int xx,yy;
        
        xx = evt.getXOnScreen();
        yy = evt.getYOnScreen();
        this.setLocation(xx-x,yy-y);
        
    }//GEN-LAST:event_jLabel1MouseDragged

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        this.setVisible(false);
    }//GEN-LAST:event_jLabel5MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin_login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin_login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin_login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin_login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin_login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField admininput;
    private javax.swing.JPanel adminjpannel;
    public javax.swing.JPasswordField adminpassinput;
    private javax.swing.JComboBox<String> combox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}

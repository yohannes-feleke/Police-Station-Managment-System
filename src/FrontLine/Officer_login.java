package FrontLine;


import java.awt.Image;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import DataBase.DataBase;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Joh
 */

public class Officer_login extends javax.swing.JFrame {

    DataBase dbs = new DataBase();
    
    Connection con = null;
    PreparedStatement ps = null;
    ResultSet rs = null;
        
    String DBuser = dbs.UserDB.getText();
    String DBpass = dbs.PassDB.getText();
    String DBName = dbs.nameDB.getText();
    
    String str;
    int x,y;
    public Officer_login() {
        initComponents();
        this.setLocationRelativeTo(null);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        userinput = new javax.swing.JTextField();
        passinput = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        combox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("FRONTLINE OFFICER LOGIN");
        setUndecorated(true);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setLayout(null);

        userinput.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        userinput.setBorder(null);
        userinput.setOpaque(false);
        userinput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                userinputKeyPressed(evt);
            }
        });
        jPanel2.add(userinput);
        userinput.setBounds(250, 160, 330, 35);

        passinput.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        passinput.setBorder(null);
        passinput.setOpaque(false);
        passinput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passinputKeyPressed(evt);
            }
        });
        jPanel2.add(passinput);
        passinput.setBounds(250, 270, 330, 35);

        jLabel2.setBackground(new java.awt.Color(153, 0, 51));
        jLabel2.setFont(new java.awt.Font("Sitka Small", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 204));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("User Name");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(250, 130, 330, 50);

        jLabel3.setBackground(new java.awt.Color(153, 0, 51));
        jLabel3.setFont(new java.awt.Font("Sitka Small", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 204));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Password");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(250, 240, 330, 50);

        jLabel4.setBackground(new java.awt.Color(153, 0, 51));
        jLabel4.setFont(new java.awt.Font("Sitka Small", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 204));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("SELECT YOUR TYPE");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(430, -2, 350, 40);

        combox.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        combox.setForeground(new java.awt.Color(0, 0, 255));
        combox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Frontline", "Offline", "Main Investigator", "Commander", "Admin" }));
        jPanel2.add(combox);
        combox.setBounds(430, 30, 210, 28);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FrontLine/login.png"))); // NOI18N
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel7);
        jLabel7.setBounds(320, 320, 210, 60);

        jLabel1.setBackground(new java.awt.Color(255, 0, 204));
        jLabel1.setOpaque(true);
        jPanel2.add(jLabel1);
        jLabel1.setBounds(250, 190, 330, 10);

        jLabel5.setBackground(new java.awt.Color(255, 0, 204));
        jLabel5.setOpaque(true);
        jPanel2.add(jLabel5);
        jLabel5.setBounds(250, 300, 330, 10);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PbofTs.jpg"))); // NOI18N
        jPanel2.add(jLabel6);
        jLabel6.setBounds(0, 0, 780, 430);

        jLabel8.setBackground(new java.awt.Color(0, 0, 0));
        jLabel8.setOpaque(true);
        jLabel8.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel8MouseDragged(evt);
            }
        });
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel8MousePressed(evt);
            }
        });

        jLabel9.setBackground(new java.awt.Color(0, 0, 0));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cancel_48px.png"))); // NOI18N
        jLabel9.setOpaque(true);
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jLabel9))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void userinputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userinputKeyPressed
        if(userinput.equals("") || passinput.equals(""))
{
      JOptionPane.showMessageDialog(null, "Empty user name or password");
      userinput.setText("");
      passinput.setText("");
}
else
{
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
       {
           try {
            //connection
            con = DriverManager.getConnection(DBName, DBuser,DBpass);
            
            String s1 = userinput.getText();
            String s2 = passinput.getText();
            
            str = "SELECT username,password,Type FROM employee WHERE username=? AND password=? AND Type=?";
            ps = con.prepareStatement(str);
            ps.setString(1, userinput.getText());
            ps.setString(2, passinput.getText());
            ps.setString(3, combox.getSelectedItem().toString());
            rs = ps.executeQuery();
            
            if(rs.next() && rs.getString("username").equals(userinput.getText()) && rs.getString("password").equals(passinput.getText()) && rs.getString("Type").equals(combox.getSelectedItem().toString()))
            {
                JOptionPane.showMessageDialog(null, "Successfuly Logedin");
                Frontline_mainpage fm = new Frontline_mainpage();
                fm.setVisible(true);
                this.setVisible(false);
//                String str2 = "INSERT INTO log(userlog) VALUES(?)";
//                ps = con.prepareStatement(str2);
//                ps.setString(1, userinput.getText());
//                ps.executeUpdate();
                fm.Pname.setText(userinput.getText());
                
                //selection of image
//                while(rs.next())
//                {
//                    rs.close();
//                String str17 = "SELECT * FROM patientinfo WHERE username=? AND password=?";
//                 ps = con.prepareStatement(str17);
//                ps.setString(1, userinput.getText());
//                ps.setString(2, passinput.getText());
//                rs = ps.executeQuery();
//                fm.pimage.setText(rs.getString("image"));
//                }

                    // Profile image loader
                    
           try {
            byte[] imgbyt;
            Image img;
            con = DriverManager.getConnection(DBName,DBuser,DBpass);
            String str = "SELECT image FROM employee WHERE username=?";
            ps=con.prepareStatement(str);
            ps.setString(1, userinput.getText());
            rs=ps.executeQuery();
            while(rs.next())
            {
                imgbyt = rs.getBytes(1);
                img = getToolkit().createImage(imgbyt);
                Image im = img.getScaledInstance(fm.pimage.getWidth(), fm.pimage.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon icon = new ImageIcon(im);
                fm.pimage.setIcon(icon);
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Frontline_mainpage.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Fail to Add image");
        }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Incorrect username or password");
                userinput.setText("");
                passinput.setText("");
//                String str2 = "DELETE FROM userlog(log)";
//                ps = con.prepareStatement(str2);
//                ps.executeUpdate();     
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Officer_login.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Fail to Connect to Data Base");
        }
       }
}
    }//GEN-LAST:event_userinputKeyPressed

    private void passinputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passinputKeyPressed
       if(userinput.equals("") || passinput.equals(""))
{
      JOptionPane.showMessageDialog(null, "Empty user name or password");
      userinput.setText("");
      passinput.setText("");
}
else
{
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
       {
           try {
            //connection
            con = DriverManager.getConnection(DBName, DBuser,DBpass);
            
            String s1 = userinput.getText();
            String s2 = passinput.getText();
            
            str = "SELECT username,password,Type FROM employee WHERE username=? AND password=? AND Type=?";
            ps = con.prepareStatement(str);
            ps.setString(1, userinput.getText());
            ps.setString(2, passinput.getText());
            ps.setString(3, combox.getSelectedItem().toString());
            rs = ps.executeQuery();
            
            if(rs.next() && rs.getString("username").equals(userinput.getText()) && rs.getString("password").equals(passinput.getText()) && rs.getString("Type").equals(combox.getSelectedItem().toString()))
            {
                JOptionPane.showMessageDialog(null, "Successfuly Logedin");
                Frontline_mainpage fm = new Frontline_mainpage();
                fm.setVisible(true);
                this.setVisible(false);
//                String str2 = "INSERT INTO log(userlog) VALUES(?)";
//                ps = con.prepareStatement(str2);
//                ps.setString(1, userinput.getText());
//                ps.executeUpdate();
                fm.Pname.setText(userinput.getText());
                
                //selection of image
//                while(rs.next())
//                {
//                    rs.close();
//                String str17 = "SELECT * FROM patientinfo WHERE username=? AND password=?";
//                 ps = con.prepareStatement(str17);
//                ps.setString(1, userinput.getText());
//                ps.setString(2, passinput.getText());
//                rs = ps.executeQuery();
//                fm.pimage.setText(rs.getString("image"));
//                }

                    // Profile image loader
                    
           try {
            byte[] imgbyt;
            Image img;
            con = DriverManager.getConnection(DBName,DBuser,DBpass);
            String str = "SELECT image FROM employee WHERE username=?";
            ps=con.prepareStatement(str);
            ps.setString(1, userinput.getText());
            rs=ps.executeQuery();
            while(rs.next())
            {
                imgbyt = rs.getBytes(1);
                img = getToolkit().createImage(imgbyt);
                Image im = img.getScaledInstance(fm.pimage.getWidth(), fm.pimage.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon icon = new ImageIcon(im);
                fm.pimage.setIcon(icon);
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Frontline_mainpage.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Incorrect username or password");
                userinput.setText("");
                passinput.setText("");
//                String str2 = "DELETE FROM userlog(log)";
//                ps = con.prepareStatement(str2);
//                ps.executeUpdate();     
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Officer_login.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Fail to Connect to Data Base");
        }
       }
}
    }//GEN-LAST:event_passinputKeyPressed

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        if(userinput.getText().equals("") || passinput.getText().equals(""))
{
      JOptionPane.showMessageDialog(null, "Empty user name or password");
      userinput.setText("");
      passinput.setText("");
}
else
{
        try {
            //connection
            con = DriverManager.getConnection(DBName,DBuser,DBpass);
            
            String s1 = userinput.getText();
            String s2 = passinput.getText();
            
            str = "SELECT username,password,type FROM employee WHERE username=? AND password=? AND type=?";
            ps = con.prepareStatement(str);
            ps.setString(1, s1);
            ps.setString(2, s2);
            ps.setString(3, combox.getSelectedItem().toString());
            rs = ps.executeQuery();
            
            if(rs.next() && rs.getString("username").equals(userinput.getText()) && rs.getString("password").equals(passinput.getText()) && rs.getString("Type").equals(combox.getSelectedItem().toString()))
            {
                 //logs
            Date d = new Date();
            String DataofR = d.toString();
            DateFormat t = new SimpleDateFormat("HH:mm:ss");
            Calendar cld = Calendar.getInstance();
            
            con = DriverManager.getConnection(DBName, DBuser,DBpass);
            str = "INSERT INTO log(EMPLOYEE_NAME,TYPE,DATE,TIME) VALUES(?, ?, ?, ?)";
            ps = con.prepareStatement(str);
            ps.setString(1, userinput.getText());
            ps.setString(2, combox.getSelectedItem().toString());
            ps.setString(3, DataofR);
            ps.setString(4, t.format(cld.getTime()));
            ps.executeUpdate();
                
                JOptionPane.showMessageDialog(null, "Successfuly Logedin");
                Frontline_mainpage fm = new Frontline_mainpage();
                fm.setVisible(true);
                this.setVisible(false);
//                String str2 = "INSERT INTO log(userlog) VALUES(?)";
//                ps = con.prepareStatement(str2);
//                ps.setString(1, userinput.getText());
//                ps.executeUpdate();
                fm.Pname.setText(userinput.getText());
                
                //selection of image
//                while(rs.next())
//                {
//                    rs.close();
//                String str17 = "SELECT * FROM patientinfo WHERE username=? AND password=?";
//                 ps = con.prepareStatement(str17);
//                ps.setString(1, userinput.getText());
//                ps.setString(2, passinput.getText());
//                rs = ps.executeQuery();
//                fm.pimage.setText(rs.getString("image"));
//                }

                    // Profile image loader
                    
           try {
            byte[] imgbyt;
            Image img;
            con = DriverManager.getConnection(DBName,DBuser,DBpass);
            str = "SELECT image FROM employee WHERE username=?";
            ps=con.prepareStatement(str);
            ps.setString(1, userinput.getText());
            rs=ps.executeQuery();
            while(rs.next())
            {
                imgbyt = rs.getBytes(1);
                img = getToolkit().createImage(imgbyt);
                Image im = img.getScaledInstance(fm.pimage.getWidth(), fm.pimage.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon icon = new ImageIcon(im);
                fm.pimage.setIcon(icon);
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Frontline_mainpage.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Fail to Add Image");
        }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Incorrect username or password");
                userinput.setText("");
                passinput.setText("");
//                String str2 = "DELETE FROM userlog(log)";
//                ps = con.prepareStatement(str2);
//                ps.executeUpdate();     
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Officer_login.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Fail to Connect to Data Base");
        }
}
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        this.setVisible(false);
    }//GEN-LAST:event_jLabel9MouseClicked

    private void jLabel8MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_jLabel8MousePressed

    private void jLabel8MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseDragged
        int xx,yy;
        
        xx = evt.getXOnScreen();
        yy = evt.getYOnScreen();
        this.setLocation(xx-x,yy-y);
    }//GEN-LAST:event_jLabel8MouseDragged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Officer_login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Officer_login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Officer_login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Officer_login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Officer_login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> combox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    public javax.swing.JPasswordField passinput;
    public javax.swing.JTextField userinput;
    // End of variables declaration//GEN-END:variables
}
